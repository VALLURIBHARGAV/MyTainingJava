package com.system.billing.controllers;


import com.system.billing.models.Bill;
import com.system.billing.models.Patient;
import com.system.billing.models.User;
import com.system.billing.services.BillService;
import com.system.billing.services.PatientService;

import jakarta.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

@Controller
@RequestMapping("/bills")
public class BillController {
	@Autowired
    BillService billService;
	@Autowired
	PatientService patientService;
    

    @GetMapping
    public String listBills(Model model,HttpSession session) {
    	User user = (User) session.getAttribute("user");
		if (user != null && ("ADMIN".equals(user.getRole()) || "OPERATOR".equals(user.getRole()) ) ) {
        model.addAttribute("bills", billService.getAllBills());
        return "listbill";
		}else {
			return "accessDenied";
		}
		
    }

    @GetMapping("/{id}")
    public String viewBill(@PathVariable int id, Model model,HttpSession session) {
    	User user = (User) session.getAttribute("user");
		if (user != null && ("ADMIN".equals(user.getRole()) || "OPERATOR".equals(user.getRole()) ) ) {
        Bill bill = billService.getBillById(id).orElse(null);
        model.addAttribute("bill", bill);
        return "viewbill";
		}else{
        	return "accessDenied";
        }
    }

    @GetMapping("/add")
    public String addBillForm(Model model) {
        model.addAttribute("bill", new Bill());
        return "addbill";
    }

    @PostMapping("/add")
    public String addBill(@ModelAttribute Bill bill) {
        billService.createBill(bill);
        return "redirect:/bills";
    }

    @GetMapping("/edit/{id}")
    public String editBillForm(@PathVariable int id, Model model) {
        Bill bill = billService.getBillById(id).orElse(null);
        model.addAttribute("bill", bill);
        return "editbill";
    }

    @PostMapping("/edit/{id}")
    public String editBill(@PathVariable int id, @ModelAttribute Bill bill) {
        billService.updateBill(bill);
        return "redirect:/bills";
    }

    @GetMapping("/delete/{id}")
    public String deleteBill(@PathVariable int id) {
        billService.deleteBill(id);
        return "redirect:/bills";
    }
    
    @GetMapping("/generateBill")
    public String showGenerateBillForm(Model model ) {
        // Add any necessary data to the model, if needed
    	model.addAttribute("bill" , new Bill());
        return "generatebill"; // Assuming "generatebill.jsp" is your JSP view
    }
    
    @PostMapping("/generateBill")
    public String generateBillForPatient(
            @RequestParam("patient") int patientId,
            @RequestParam(value="bedCharges", required = false) Double bedCharges,
            @RequestParam(value="wardCharges",required = false) Double wardCharges,
            @RequestParam(value="treatmentCharges",required = false) Double treatmentCharges,
            @ModelAttribute Bill bill,
            Model model
    ) {
        // Retrieve the patient based on the provided ID
        Patient patient = patientService.getPatientById(patientId);

        if (patient != null) {
        	// Set default values if the parameters are not provided
            double defaultBedCharges = 200;
            double defaultWardCharges = 150;
            double defaultTreatmentCharges = 500;

            // Use the provided values if available; otherwise, use defaults
            double actualBedCharges = bedCharges != null ? bedCharges : defaultBedCharges;
            double actualWardCharges = wardCharges != null ? wardCharges : defaultWardCharges;
            double actualTreatmentCharges = treatmentCharges != null ? treatmentCharges : defaultTreatmentCharges;

            // Generate a bill for the patient
            billService.generateBillForPatient(patient, actualBedCharges, actualWardCharges, actualTreatmentCharges);

            // Add the bill to the model to display in the view
            model.addAttribute("bill", bill);
        }

        // Redirect to the view page (generatebill.jsp) to display the generated bill
        return "generatebill";
    }
}

