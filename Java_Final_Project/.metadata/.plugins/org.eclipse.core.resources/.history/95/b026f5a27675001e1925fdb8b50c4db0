package com.system.exchange.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.system.exchange.Repositories.CurrencyRepository;
import com.system.exchange.model.Currency;




@Controller
@RequestMapping("/converts")
public class CurrencyConversionController {
	
	 @Autowired
	  private CurrencyRepository currencyRepository;
	 
	@PostMapping("/convert")
	@ResponseBody
	public ModelAndView convertCurrency(
	        @RequestParam("amount") double amount,
	        @RequestParam("fromCurrency") String fromCurrency,
	        @RequestParam("toCurrency") String toCurrency) {

	    Currency fromCurrencyEntity = currencyRepository.findByCurrencyCode(fromCurrency);
	    Currency toCurrencyEntity = currencyRepository.findByCurrencyCode(toCurrency);

	    if (fromCurrencyEntity != null && toCurrencyEntity != null) {
	        double fromRate = fromCurrencyEntity.getExchangeRate();
	        double toRate = toCurrencyEntity.getExchangeRate();

	        // Calculate the converted amount
	        double convertedAmount = amount * (toRate / fromRate);
	        ModelAndView modelAndView = new ModelAndView("convertedCurrency");
	        modelAndView.addObject("convertedAmount", convertedAmount);

	        return modelAndView;

	       // return String.format("%.2f %s = %.2f %s", amount, fromCurrency, convertedAmount, toCurrency);
	    } else {
	        //return "Invalid currency codes"; // Handle invalid currency codes
	    	ModelAndView modelAndView = new ModelAndView("InvalidCode");
	    	return modelAndView;
	    }
	}


}
